generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN  
  STUDENT 

  @@map("roles")
}

model User {
  id        String     @id @default(uuid())
  firstName String     @map("first_name")
  lastName  String     @map("last_name")
  email     String     @unique
  password  String
  role      Role       @default(STUDENT)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  // Relationships
  createdBooks Book[]      @relation("BooksCreated")
  bookings     Booking[]   

  @@map("users")
}

model Book {
  id              Int        @id @default(autoincrement())
  name            String     @unique
  author          String
  publisher       String
  publicationYear String
  subject         String
  createdAt       DateTime   @default(now()) @map("created_at")

  // Who created the book (Admin)
  createdBy       User       @relation("BooksCreated", fields: [createdById], references: [id])
  createdById     String

  // Booking relationship
  bookings        Booking[]

  @@map("books")
}

model Booking {
  id         String   @id @default(uuid())
  orderId    String   @unique @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  startDate  DateTime @default(now()) @map("start_date")
  endDate    DateTime @map("end_date")
  price      Float
  createdAt  DateTime @default(now()) @map("created_at")

  @@map("bookings")
}

model oTP {
  id        String   @id @default(uuid())
  email     String
  code      String
  createdAt DateTime @default(now()) @map("created_at")
}
